{"ast":null,"code":"var _jsxFileName = \"C:\\\\vxxiv\\\\task-3\\\\src\\\\graphs\\\\versorDragging.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { geoPath, geoNaturalEarth1, geoRotation } from \"d3-geo\";\nimport { select, pointers } from \"d3-selection\";\nimport { drag } from \"d3-drag\";\n// import { geoRotationIdentity } from \"d3-geo-projection\";\nimport { feature } from \"topojson-client\";\nimport land50mData from \"./land50m.json\";\nimport land110mData from \"./land110m.json\";\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction geoRotationIdentity(rotate) {\n  rotate[0] %= 360;\n  rotate[1] %= 360;\n  rotate[2] %= 360;\n  return rotate.length === 3 ? rotate : [rotate[0] || 0, rotate[1] || 0, rotate[2] || 0];\n}\nconst Globe = () => {\n  _s();\n  const mapRef = useRef(null);\n  useEffect(() => {\n    const map = L.map(mapRef.current).setView([0, 0], 2);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(map);\n    const width = 800;\n    const height = 600;\n    const projection = geoNaturalEarth1().rotate([0, 0]).fitSize([width, height], {\n      type: \"Sphere\"\n    });\n    const context = select(map.getPane(\"overlayPane\")).append(\"canvas\").attr(\"width\", width).attr(\"height\", height).node().getContext(\"2d\");\n    const path = geoPath(projection, context);\n    const land50m = feature(land50mData, land50mData.objects.land);\n    const land110m = feature(land110mData, land110mData.objects.land);\n    function render(land) {\n      context.clearRect(0, 0, width, height);\n      context.beginPath();\n      path({\n        type: \"Sphere\"\n      });\n      context.fillStyle = \"#fff\";\n      context.fill();\n      context.beginPath();\n      path(land);\n      context.fillStyle = \"#000\";\n      context.fill();\n      context.beginPath();\n      path({\n        type: \"Sphere\"\n      });\n      context.stroke();\n    }\n    function pointer(event) {\n      const t = event.touches;\n      if (t && t.length !== l) {\n        l = t.length;\n        if (l > 1) a0 = Math.atan2(t[1].clientY - t[0].clientY, t[1].clientX - t[0].clientX);\n        dragstarted.apply(this, [event]);\n      }\n      if (l > 1) {\n        const x = d3.mean(t, p => p.clientX);\n        const y = d3.mean(t, p => p.clientY);\n        const a = Math.atan2(t[1].clientY - t[0].clientY, t[1].clientX - t[0].clientX);\n        return [x, y, a];\n      }\n      return [t[0].clientX, t[0].clientY];\n    }\n    function dragstarted(event) {\n      v0 = projection.invert(select(mapRef.current).mouse(event));\n      q0 = geoRotation(projection.rotate());\n    }\n    function dragged(event) {\n      const v1 = projection.invert(select(mapRef.current).mouse(event));\n      const delta = [v1[0] - v0[0], v1[1] - v0[1]];\n      let q1 = q0;\n      if (l > 1) {\n        const p = pointer(event);\n        if (p[2]) {\n          const d = (p[2] - a0) / 2;\n          const s = -Math.sin(d);\n          const c = Math.sign(Math.cos(d));\n          q1 = geoRotationIdentity.rotate([-s * 180 / Math.PI, 0, c * 180 / Math.PI]);\n        }\n      }\n      projection.rotate(geoRotation(q1).invert(delta));\n      if (delta[0] < 0.7) dragstarted(event);\n      render(land110m);\n    }\n    let v0,\n      q0,\n      a0,\n      l = 0;\n    select(context.canvas).call(drag().on(\"start\", dragstarted).on(\"drag\", dragged));\n    render(land50m);\n    return () => {\n      map.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: \"800px\",\n      height: \"600px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n_s(Globe, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = Globe;\nexport default Globe;\nvar _c;\n$RefreshReg$(_c, \"Globe\");","map":{"version":3,"names":["React","useEffect","useRef","L","geoPath","geoNaturalEarth1","geoRotation","select","pointers","drag","feature","land50mData","land110mData","d3","jsxDEV","_jsxDEV","geoRotationIdentity","rotate","length","Globe","_s","mapRef","map","current","setView","tileLayer","addTo","width","height","projection","fitSize","type","context","getPane","append","attr","node","getContext","path","land50m","objects","land","land110m","render","clearRect","beginPath","fillStyle","fill","stroke","pointer","event","t","touches","l","a0","Math","atan2","clientY","clientX","dragstarted","apply","x","mean","p","y","a","v0","invert","mouse","q0","dragged","v1","delta","q1","d","s","sin","c","sign","cos","PI","canvas","call","on","remove","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/vxxiv/task-3/src/graphs/versorDragging.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { geoPath, geoNaturalEarth1, geoRotation } from \"d3-geo\";\r\nimport { select, pointers } from \"d3-selection\";\r\nimport { drag } from \"d3-drag\";\r\n// import { geoRotationIdentity } from \"d3-geo-projection\";\r\nimport { feature } from \"topojson-client\";\r\nimport land50mData from \"./land50m.json\";\r\nimport land110mData from \"./land110m.json\";\r\nimport * as d3 from 'd3';\r\n\r\nfunction geoRotationIdentity(rotate) {\r\n    rotate[0] %= 360;\r\n    rotate[1] %= 360;\r\n    rotate[2] %= 360;\r\n    return rotate.length === 3 ? rotate : [rotate[0] || 0, rotate[1] || 0, rotate[2] || 0];\r\n  }\r\n\r\nconst Globe = () => {\r\n  const mapRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const map = L.map(mapRef.current).setView([0, 0], 2);\r\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(map);\r\n\r\n    const width = 800;\r\n    const height = 600;\r\n    const projection = geoNaturalEarth1().rotate([0, 0]).fitSize([width, height], { type: \"Sphere\" });\r\n\r\n    const context = select(map.getPane(\"overlayPane\")).append(\"canvas\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .node().getContext(\"2d\");\r\n\r\n    const path = geoPath(projection, context);\r\n\r\n    const land50m = feature(land50mData, land50mData.objects.land);\r\n    const land110m = feature(land110mData, land110mData.objects.land);\r\n\r\n    function render(land) {\r\n      context.clearRect(0, 0, width, height);\r\n      context.beginPath(); path({type: \"Sphere\"}); context.fillStyle = \"#fff\"; context.fill();\r\n      context.beginPath(); path(land); context.fillStyle = \"#000\"; context.fill();\r\n      context.beginPath(); path({type: \"Sphere\"}); context.stroke();\r\n    }\r\n\r\n    function pointer(event) {\r\n        const t = event.touches;\r\n        if (t && t.length !== l) {\r\n          l = t.length;\r\n          if (l > 1) a0 = Math.atan2(t[1].clientY - t[0].clientY, t[1].clientX - t[0].clientX);\r\n          dragstarted.apply(this, [event]);\r\n        }\r\n      \r\n        if (l > 1) {\r\n          const x = d3.mean(t, p => p.clientX);\r\n          const y = d3.mean(t, p => p.clientY);\r\n          const a = Math.atan2(t[1].clientY - t[0].clientY, t[1].clientX - t[0].clientX);\r\n          return [x, y, a];\r\n        }\r\n      \r\n        return [t[0].clientX, t[0].clientY];\r\n      }\r\n\r\n    function dragstarted(event) {\r\n      v0 = projection.invert(select(mapRef.current).mouse(event));\r\n      q0 = geoRotation(projection.rotate());\r\n    }\r\n\r\n    function dragged(event) {\r\n      const v1 = projection.invert(select(mapRef.current).mouse(event));\r\n      const delta = [v1[0] - v0[0], v1[1] - v0[1]];\r\n      let q1 = q0;\r\n\r\n      if (l > 1) {\r\n        const p = pointer(event);\r\n        if (p[2]) {\r\n          const d = (p[2] - a0) / 2;\r\n          const s = -Math.sin(d);\r\n          const c = Math.sign(Math.cos(d));\r\n          q1 = geoRotationIdentity.rotate([-s * 180 / Math.PI, 0, c * 180 / Math.PI]);\r\n        }\r\n      }\r\n\r\n      projection.rotate(geoRotation(q1).invert(delta));\r\n\r\n      if (delta[0] < 0.7) dragstarted(event);\r\n      render(land110m);\r\n    }\r\n\r\n    let v0, q0, a0, l = 0;\r\n    select(context.canvas).call(drag().on(\"start\", dragstarted).on(\"drag\", dragged));\r\n    render(land50m);\r\n\r\n    return () => {\r\n      map.remove();\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={mapRef} style={{ width: \"800px\", height: \"600px\" }} />;\r\n};\r\n\r\nexport default Globe;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}